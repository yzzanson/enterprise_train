<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:redis="http://www.springframework.org/schema/redis" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/redis
        http://www.springframework.org/schema/redis/spring-redis-1.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- 把标记了@Controller注解的类转换为bean -->
    <context:component-scan base-package="com.enterprise.web.controller"/>
    <context:component-scan base-package="com.enterprise.web.interceptor"/>
    <context:component-scan base-package="com.enterprise.isv.jobs"/>

    <mvc:interceptors>
        <!--权限控制拦截器-->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/resources/**"/>
            <bean class="com.enterprise.web.interceptor.EnterpriseInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>


    <!-- 配置注解的处理器映射器和处理器适配器 -->
    <!-- <mvc:annotation-driven /> 是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以让初学者
        快速应用默认配置方案。<mvc:annotation-driven /> 会自动注册DefaultAnnotationHandlerMapping与
        AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的。 -->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
            <bean id="fastJsonHttpMessageConverter"
                  class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!-- 这里顺序不能反，一定先写text/html,不然ie下出现下载提示 -->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <value>WriteMapNullValue</value>
                        <value>QuoteFieldNames</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 定时器开关-->
    <task:annotation-driven/>
    <bean id="refreshTokenJob" class="com.enterprise.isv.jobs.ISVTicketsJob"/>
    <bean id="suitesJob" class="com.enterprise.isv.jobs.SuitesJob"/>
    <bean id="authUserJob" class="com.enterprise.web.job.AuthUserJob"/>
    <bean id="priceJob" class="com.enterprise.web.job.PriceJob"/>
    <task:scheduled-tasks>
        <!--程序启动5s后调用refreshProductJob类中的refreshProduct方法，然后每隔1.5（1.5*60*60*1000）个小时再调用refreshProduct一次-->
        <task:scheduled ref="refreshTokenJob" method="work" fixed-delay="5400000" initial-delay="5000"/>
        <!--程序启动5s后调用SuitesJob类中的work方法，然后每隔15（15*60*1000）分钟再调用work一次-->
        <task:scheduled ref="suitesJob" method="work" fixed-delay="900000" initial-delay="5000"/>
        <task:scheduled ref="authUserJob" method="work" fixed-delay="900000" initial-delay="5000"/>
        <task:scheduled ref="priceJob" method="sendPriceMsg" cron="0 0 9 * * ?"/>
    </task:scheduled-tasks>


    <!-- 第二步： 创建convertion-Service ，并注入dateConvert-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <ref bean="dateConvert"/>
                <ref bean="bigDecimalConvert"/>
                <ref bean="integerConvert"/>
            </set>
        </property>
    </bean>
    <!-- 第一步:  创建自定义日期转换规则 -->
    <bean id="dateConvert" class="com.enterprise.base.convert.DateConvert"/>
    <bean id="bigDecimalConvert" class="com.enterprise.base.convert.BigDecimalConvert"/>
    <bean id="integerConvert" class="com.enterprise.base.convert.IntegerConvert"/>


</beans>